.root {
  position: relative;

  font-size: 14px;
  line-height: 1.25em;
  font-family: 'Fira Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
}
.scrollbox {
  overflow: auto;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: inherit;
}
.scrollbox > div {
  position: relative;
  min-height: 100%;
}
.textarea,
.highlight,
.caretLayer
{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  min-height: 100%;
  display: block;
  padding: .5em 1em .5em 5.5ch;
  margin: 0;
  overflow: hidden; /* inconsistent scroll bars mess up the width */

  border: none;
  outline: none;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
  color: inherit;
  background: transparent;

  white-space: pre-wrap;
  word-wrap: normal; /* word-wrap = overflow-wrap */
  overflow-wrap: normal;
  word-break: normal;
  tab-size: 4;
}
.highlight {
  z-index: 2;
  pointer-events: none;
  padding-left: 0.5ch; /* line numbers */
}
.textarea {
  z-index: 0;
  resize: none;
  opacity: 0;
  height: 100%;
}


.caretLayer {
  position: static;
  pointer-events: none;
  color: transparent;
}
@keyframes caretBlink {
  0% { opacity: 1; }
  40% { opacity: 1; }
  60% { opacity: 0; }
  100% { opacity: 0; }
}
.caret {
  border: 1px solid black; /* caret color */
  margin: 0 -1px;
}
.caret.blink {
  animation: caretBlink .6s linear infinite alternate;
  animation-delay: .5s;
}
.textarea:not(:focus) ~ .caretLayer .caret {
  display: none;
}
.selection {
  border-radius: 2px;
}
.selection:empty {
  display: none;
}


.highlight :global(.line) {
  display: flex;
  border-radius: 2px;
}
.highlight :global(.lineno) {
  position: relative;
  flex: 0 0 4.5ch;
  padding-right: 1.5ch;
  margin-right: .5ch;
  border-right: 1px solid #ddd;
  text-align: right;
  color: grey;
}
.highlight :global(.line:not(.current, .error)) {
  transition: .1s background, .1s box-shadow;
}
.highlight :global(.marked .lineno::after) {
  position: absolute;
  right: 0;
  font-size: 1.3em;
}
.highlight :global(.current .lineno::after) {
  content: "➡";
}
.highlight :global(.error .lineno::after) {
  content: "✕";
  color: red;
}
.highlight :global(.line-content .error),
.highlight :global(.error .line-content span) {
  text-decoration: wavy underline #f00a;
}
.highlight :global(.error .line-content .whitespace) {
  text-decoration: none;
}
